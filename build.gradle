buildscript {
    ext.kotlin_version = '1.6.0-RC2'
    repositories {
        mavenCentral()
    }
    dependencies {
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version"
    }
}
plugins {
    id 'org.jetbrains.kotlin.multiplatform' version '1.5.31'
    id "io.gitlab.arturbosch.detekt" version "1.18.1"
    id "org.jlleitschuh.gradle.ktlint" version "10.2.0"
    id 'kotlinx-kover' version '0.3.0'
}
repositories {
    mavenCentral()
    maven { url 'https://dl.bintray.com/kotlin/kotlin-eap' }
}
group 'com.example'
version '0.0.1'

apply plugin: 'maven-publish'

kotlin {
    jvm {
        testRuns["test"].executionTask.configure {
            kover {
                generateXml = true
                generateHtml = true
                xmlReportFile.set(file("$buildDir/reports/coverage/report.xml"))
                htmlReportDir.set(file("$buildDir/reports/coverage/html"))
                includes = ['com\\.plastickarma\\.producerswithpriority\\..*']
                verificationRule {
                    name = "Minimal line coverage rate in percents"
                    minValue = 93
                    valueType = 'COVERED_LINES_PERCENTAGE'
                }
            }
        }
    }
    js {
        nodejs {
            testTask {
                useMocha {
                    timeout = "15000"
                }
            }
        }
    }
    sourceSets {
        commonMain {
            dependencies {
                implementation kotlin('stdlib-common')
                implementation("org.jetbrains.kotlinx:kotlinx-coroutines-core:1.5.2")

            }
        }
        commonTest {
            dependencies {
                implementation kotlin('test-common')
                implementation kotlin('test-annotations-common')
            }
        }
        jvmMain {
            dependencies {
                implementation kotlin('stdlib-jdk8')
            }
        }
        jvmTest {
            dependencies {
                implementation kotlin('test')
                implementation kotlin('test-junit')
            }
        }
        jsMain {
            dependencies {
                implementation kotlin('stdlib-js')
            }
        }
        jsTest {
            dependencies {
                implementation kotlin('test-js')
            }
        }
    }
    targets {
        configure([]) {
            tasks.getByName(compilations.main.compileKotlinTaskName).kotlinOptions {
                jvmTarget = "1.8"
            }
        }
    }
}

detekt {
    config = files("config/detekt.yml")
    input = files("src/commonMain/kotlin")
}

jvmTest {

}

assemble.dependsOn check
